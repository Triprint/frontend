import { createStitches } from '@stitches/react';
import type * as Stitches from '@stitches/react';

export const {
  styled,
  css,
  globalCss,
  keyframes,
  theme: defaultTheme,
  createTheme,
  getCssText,
  config,
} = createStitches({
  theme: {
    colors: {
      white: '#ffffff',
      black: '#000000',
      transparent: 'transparent',
      currentColor: 'currentColor',
      grey50: '#f7f8fa',
      grey100: '#f2f3f6',
      grey200: '#eaebee',
      grey300: '#dcdee3',
      grey400: '#d1d3d8',
      grey500: '#adb1ba',
      grey600: '#868b94',
      grey700: '#4d5159',
      grey800: '#393a40',
      grey900: '#212124',
      rose50: '#fff1f2',
      rose100: '#ffe4e6',
      rose200: '#fecdd3',
      rose300: '#fda4af',
      rose400: '#fb7185',
      rose500: '#f43f5e',
      rose600: '#e11d48',
      rose700: '#be123c',
      rose800: '#9f1239',
      rose900: '#881337',
      red50: '#fef2f2',
      red100: '#fee2e2',
      red200: '#fecaca',
      red300: '#fca5a5',
      red400: '#f87171',
      red500: '#ef4444',
      red600: '#dc2626',
      red700: '#b91c1c',
      red800: '#991b1b',
      red900: '#7f1d1d',

      primary: '$rose500',
      onPrimary: '$white',
      primaryContainer: '$rose100',
      onPrimaryContainer: '$rose500',
      error: '$red700',
      onError: '$white',
      errorContainer: '$red100',
      onErrorContainer: '$red700',
      background: '$grey50',
      onBackground: '$grey900',
      surface: '$white',
      onSurface: '$grey900',
      surfaceVariant: '$grey200',
      onSurfaceVariant: '$grey700',
      onSurfaceSubdued: '$grey600',
      outline: '$grey300',
      outlineVariant: '$grey600',
      inverseSurface: '$grey800',
      inverseOnSurface: '$grey50',

      hoverPrimary: '$rose600',
      hoverPrimaryContainer: '$rose200',
      hoverError: '$red800',
      hoverErrorContainer: '$red200',
      hoverBackground: '$grey200',
      hoverSurface: '$grey200',
      hoverSurfaceVariant: '$grey300',
      hoverInverseSurface: '$grey700',
    },
    space: {
      '-px': '-1px',
      '-0_5': '-0.125rem',
      '-1': '-0.25rem',
      '-1_5': '-0.375rem',
      '-2': '-0.5rem',
      '-2_5': '-0.625rem',
      '-3': '-0.75rem',
      '-3_5': '-0.875rem',
      '-4': '-1rem',
      0: '0px',
      px: '1px',
      '0_5': '0.125rem',
      1: '0.25rem',
      '1_5': '0.375rem',
      2: '0.5rem',
      '2_5': '0.625rem',
      3: '0.75rem',
      '3_5': '0.875rem',
      4: '1rem',
      5: '1.25rem',
      6: '1.5rem',
      7: '1.75rem',
      8: '2rem',
      9: '2.25rem',
      10: '2.5rem',
      11: '2.75rem',
      12: '3rem',
      14: '3.5rem',
      16: '4rem',
      20: '5rem',
      24: '6rem',
      28: '7rem',
      32: '8rem',
      36: '9rem',
      40: '10rem',
      44: '11rem',
      48: '12rem',
      52: '13rem',
      56: '14rem',
      60: '15rem',
      64: '16rem',
      72: '18rem',
      80: '20rem',
      96: '24rem',
      112: '28rem',
      128: '32rem',
      144: '36rem',
      168: '42rem',
      180: '45rem',
      192: '48rem',
      224: '56rem',
      256: '64rem',
      288: '72rem',
      320: '80rem',
      auto: 'auto',
    },
    fontSizes: {
      '2xs': '0.625rem',
      xs: '0.75rem',
      sm: '0.875rem',
      md: '1rem',
      lg: '1.125rem',
      xl: '1.25rem',
      '2xl': '1.5rem',
      '3xl': '1.875rem',
      '4xl': '2.25rem',
      '5xl': '3rem',
      '6xl': '3.75rem',
    },
    fontWeights: {
      regular: '400',
      medium: '500',
      semibold: '600',
      bold: '700',
    },
    lineHeights: {
      '2xs': '1rem',
      xs: '1.125rem',
      sm: '1.25rem',
      md: '1.5rem',
      lg: '1.75rem',
      xl: '1.875rem',
      '2xl': '2.125rem',
      '3xl': '2.25rem',
      '4xl': '2.5rem',
      '5xl': '3rem',
      '6xl': '3.75rem',
      none: 1,
      tight: 1.25,
      snug: 1.375,
      normal: 1.5,
    },
    letterSpacings: {
      tighter: '-0.05em',
      tight: '-0.025em',
      normal: '0em',
      wide: '0.025em',
      wider: '0.05em',
      widest: '0.1em',
    },
    sizes: {
      xs: '320px',
      sm: '384px',
      md: '448px',
      lg: '512px',
      xl: '576px',
      '2xl': '672px',
      '3xl': '768px',
      '4xl': '896px',
      '5xl': '1024px',
      '6xl': '1152px',
      '7xl': '1280px',
      '25p': '25%',
      '33p': '33.333333%',
      '50p': '50%',
      '66p': '66.666667%',
      '75p': '75%',
      full: '100%',
    },
    borderWidths: {
      0: '0px',
      1: '1px',
      2: '2px',
      4: '4px',
      8: '8px',
    },
    radii: {
      none: '0px',
      sm: '0.125rem',
      md: '0.25rem',
      lg: '0.375rem',
      xl: '0.5rem',
      '2xl': '0.75rem',
      '3xl': '1rem',
      '4xl': '1.5rem',
      full: '9999px',
    },
    shadows: {
      sm: '0px 1px 3px 1px rgba(0,0,0,0.15), 0px 1px 2px 0px rgba(0,0,0,0.3)',
      md: '0px 2px 6px 2px rgba(0,0,0,0.15), 0px 1px 2px 0px rgba(0,0,0,0.3)',
      lg: '0px 1px 3px 0px rgba(0,0,0,0.3), 0px 4px 8px 3px rgba(0,0,0,0.15)',
      xl: '0px 2px 3px 0px rgba(0,0,0,0.3), 0px 6px 10px 4px rgba(0,0,0,0.15)',
      '2xl': '0px 4px 4px 0px rgba(0,0,0,0.3), 0px 8px 12px 6px rgba(0,0,0,0.15)',
    },
    zIndices: {
      dropdown: '1000',
      sticky: '1020',
      fixed: '1030',
      modalBackdrop: '1040',
      modal: '1050',
      popover: '1060',
      tooltip: '1070',
    },
    transitions: {
      none: 'none',
      all: 'all',
      colors: 'color, background-color, border-color, text-decoration-color, fill, stroke',
      opacity: 'opacity',
      shadow: 'box-shadow',
      transform: 'transform',
      linear: 'linear',
      easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
      easeOut: 'cubic-bezier(0, 0, 0.2, 1)',
      easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
      150: '150ms',
      200: '200ms',
      300: '300ms',
      500: '500ms',
    },
  },
  media: {
    tablet: '(min-width: 768px)',
    desktop: '(min-width: 1280px)',
  },
  utils: {
    marginX: (value: Stitches.PropertyValue<'marginLeft'>) => ({
      marginLeft: value,
      marginRight: value,
    }),
    marginY: (value: Stitches.PropertyValue<'marginTop'>) => ({
      marginTop: value,
      marginBottom: value,
    }),
    paddingX: (value: Stitches.PropertyValue<'paddingLeft'>) => ({
      paddingLeft: value,
      paddingRight: value,
    }),
    paddingY: (value: Stitches.PropertyValue<'paddingTop'>) => ({
      paddingTop: value,
      paddingBottom: value,
    }),
    lineClamp: (value: number) => ({
      overflow: 'hidden',
      display: '-webkit-box',
      WebkitBoxOrient: 'vertical',
      WebkitLineClamp: value,
    }),
  },
});

export type CSSProp = { css?: Stitches.CSS<typeof config> };
